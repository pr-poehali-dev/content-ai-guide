import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Checkbox } from '@/components/ui/checkbox';
import { Textarea } from '@/components/ui/textarea';

const Index = () => {
  const [completedTasks, setCompletedTasks] = useState<number[]>([]);
  const [activeTask, setActiveTask] = useState<number | null>(null);
  const [product, setProduct] = useState('');
  const [audience, setAudience] = useState('');
  const [tone, setTone] = useState('–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π');
  const [generatedPrompt, setGeneratedPrompt] = useState('');
  const [taskInProgress, setTaskInProgress] = useState<number | null>(null);
  const [taskResults, setTaskResults] = useState<{[key: number]: string}>({});
  const [taskInputs, setTaskInputs] = useState<{[key: number]: any}>({});
  const [taskFeedback, setTaskFeedback] = useState<{[key: number]: {score: number, feedback: string}}>({});

  const tasks = [
    {
      id: 1,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤",
      description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞",
      difficulty: "–õ–µ–≥–∫–æ",
      time: "15 –º–∏–Ω",
      tools: ["ChatGPT", "Claude"],
      example: "–°–º–∞—Ä—Ç—Ñ–æ–Ω iPhone 15 Pro ‚Äî —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å —Ç–∏—Ç–∞–Ω–æ–≤—ã–º –∫–æ—Ä–ø—É—Å–æ–º –∏ –∫–∞–º–µ—Ä–æ–π Pro –∫–ª–∞—Å—Å–∞"
    },
    {
      id: 2,
      title: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ email-—Ä–∞—Å—Å—ã–ª–æ–∫",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "20 –º–∏–Ω",
      tools: ["Jasper", "Copy.ai"],
      example: "–¢–µ–º–∞: –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ 25% –∏—Å—Ç–µ–∫–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å..."
    },
    {
      id: 3,
      title: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
      description: "100 –∏–¥–µ–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
      difficulty: "–õ–µ–≥–∫–æ",
      time: "10 –º–∏–Ω",
      tools: ["ChatGPT", "Notion AI"],
      example: "1. –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã 2. –û–ø—Ä–æ—Å —Å—Ä–µ–¥–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ 3. –ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ –∫–ª–∏–µ–Ω—Ç–∞"
    },
    {
      id: 4,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤–∏–¥–µ–æ",
      description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è YouTube –∏ TikTok",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "30 –º–∏–Ω",
      tools: ["Synthesia", "Lumen5"],
      example: "–ö–†–Æ–ß–û–ö (0-3 —Å–µ–∫): –í—ã —Ç—Ä–∞—Ç–∏—Ç–µ 5 —á–∞—Å–æ–≤ –Ω–∞ —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞ 15 –º–∏–Ω—É—Ç..."
    },
    {
      id: 5,
      title: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π –¥–ª—è –±–ª–æ–≥–∞",
      description: "SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –Ω–∞ 1500+ —Å–ª–æ–≤",
      difficulty: "–°–ª–æ–∂–Ω–æ",
      time: "45 –º–∏–Ω",
      tools: ["Surfer", "MarketMuse"],
      example: "–ó–∞–≥–æ–ª–æ–≤–æ–∫: 7 —Å–µ–∫—Ä–µ—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—Ç –≤–∞—à—É –∂–∏–∑–Ω—å –≤ 2024"
    },
    {
      id: 6,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–º–æ–≤ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
      description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏—Ä—É—Å–Ω–æ–≥–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
      difficulty: "–õ–µ–≥–∫–æ",
      time: "20 –º–∏–Ω",
      tools: ["DALL-E", "Midjourney"],
      example: "–ú–µ–º: –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç vs –û–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏ –≤–∏–¥–µ –æ—à–∏–±–∫–∏ 404"
    },
    {
      id: 7,
      title: "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
      description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "35 –º–∏–Ω",
      tools: ["SEMrush", "Ahrefs"],
      example: "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 15 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö, —Å—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –ø–æ—Å—Ç–∞ 850 —Å–∏–º–≤–æ–ª–æ–≤"
    },
    {
      id: 8,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–æ–≤",
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
      difficulty: "–°–ª–æ–∂–Ω–æ",
      time: "60 –º–∏–Ω",
      tools: ["Dialogflow", "Botpress"],
      example: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
    },
    {
      id: 9,
      title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–¥ –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–∏—Å–∫",
      description: "–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –ê–ª–∏—Å—ã –∏ Google Assistant",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "25 –º–∏–Ω",
      tools: ["AnswerThePublic", "Also Asked"],
      example: "–ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ä—â –±—ã—Å—Ç—Ä–æ? ‚Üí –†–µ—Ü–µ–ø—Ç –±–æ—Ä—â–∞ –∑–∞ 30 –º–∏–Ω—É—Ç –≤ –º—É–ª—å—Ç–∏–≤–∞—Ä–∫–µ"
    },
    {
      id: 10,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–∏–∑–æ–≤ –∏ –æ–ø—Ä–æ—Å–æ–≤",
      description: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏",
      difficulty: "–õ–µ–≥–∫–æ",
      time: "25 –º–∏–Ω",
      tools: ["Typeform", "Outgrow"],
      example: "–ö–∞–∫–æ–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–µ–º—É –±—Ä–µ–Ω–¥—É? 8 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π"
    },
    {
      id: 11,
      title: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤",
      description: "50 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ü–µ–ø–ª—è—é—â–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–µ–π",
      difficulty: "–õ–µ–≥–∫–æ",
      time: "15 –º–∏–Ω",
      tools: ["Headline Analyzer", "CoSchedule"],
      example: "–î–æ: –°–æ–≤–µ—Ç—ã –ø–æ SEO ‚Üí –ü–æ—Å–ª–µ: 12 SEO-—Ö–∞–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É—Ç—Ä–æ—è—Ç –≤–∞—à —Ç—Ä–∞—Ñ–∏–∫ –∑–∞ –º–µ—Å—è—Ü"
    },
    {
      id: 12,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏",
      description: "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "40 –º–∏–Ω",
      tools: ["Canva AI", "Beautiful.ai"],
      example: "–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞: –≠–≤–æ–ª—é—Ü–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ 2020-2024"
    },
    {
      id: 13,
      title: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–µ–π—Å–æ–≤ –∏ –∏—Å—Ç–æ—Ä–∏–π —É—Å–ø–µ—Ö–∞",
      description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ case study –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "35 –º–∏–Ω",
      tools: ["Grammarly", "Hemingway"],
      example: "–ö–∞–∫ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ X —É–≤–µ–ª–∏—á–∏–ª–æ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ 340% –∑–∞ 3 –º–µ—Å—è—Ü–∞"
    },
    {
      id: 14,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–∞—Å—Ç–æ–≤ –∏ –∞—É–¥–∏–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞",
      description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏ –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é –ò–ò",
      difficulty: "–°–ª–æ–∂–Ω–æ",
      time: "50 –º–∏–Ω",
      tools: ["Descript", "Murf"],
      example: "–ü–æ–¥–∫–∞—Å—Ç –≠–ø–∏–∑–æ–¥ #15: –ò–Ω—Ç–µ—Ä–≤—å—é —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –ò–ò-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É"
    },
    {
      id: 15,
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
      description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
      difficulty: "–°—Ä–µ–¥–Ω–µ",
      time: "30 –º–∏–Ω",
      tools: ["Buffer", "Hootsuite"],
      example: "–ê–≤—Ç–æ–ø–æ—Å—Ç –∫–∞–∂–¥—ã–π –≤—Ç–æ—Ä–Ω–∏–∫ –≤ 14:00: –°–æ–≤–µ—Ç –Ω–µ–¥–µ–ª–∏ + –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ + —Ö–µ—à—Ç–µ–≥–∏"
    }
  ];

  const toggleTaskComplete = (taskId: number) => {
    setCompletedTasks(prev => 
      prev.includes(taskId) 
        ? prev.filter(id => id !== taskId)
        : [...prev, taskId]
    );
  };

  const progressPercent = Math.round((completedTasks.length / tasks.length) * 100);

  const generatePrompt = () => {
    if (!product.trim() || !audience.trim()) {
      setGeneratedPrompt('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è "–¢–æ–≤–∞—Ä" –∏ "–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è"');
      return;
    }

    const toneMap: { [key: string]: string } = {
      '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π': '–¥–µ–ª–æ–≤–æ–º —Å—Ç–∏–ª–µ',
      '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π': '–¥—Ä—É–∂–µ–ª—é–±–Ω–æ–º —Ç–æ–Ω–µ',
      '–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π': '—ç–Ω–µ—Ä–≥–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ', 
      '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π': '—ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–º —Å—Ç–∏–ª–µ'
    };

    const prompt = `–°–æ–∑–¥–∞–π —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ "${product}" –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ "${audience}" –≤ ${toneMap[tone]}. 

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è:
1. –ü—Ä–∏–≤–ª–µ–∫–∞—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
2. –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ (3-5 –ø—É–Ω–∫—Ç–æ–≤)
3. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ —Ñ–∞–∫—Ç—ã
- –î–æ–±–∞–≤—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞
- –ü–æ–¥—á–µ—Ä–∫–Ω–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞
- –î–ª–∏–Ω–∞: 150-200 —Å–ª–æ–≤`;

    setGeneratedPrompt(prompt);
  };

  const updateTaskInput = (taskId: number, field: string, value: string) => {
    setTaskInputs(prev => ({
      ...prev,
      [taskId]: { ...prev[taskId], [field]: value }
    }));
  };

  const evaluateTask = (taskId: number) => {
    const inputs = taskInputs[taskId] || {};
    let score = 0;
    let feedback = '';
    
    const evaluationRules: {[key: number]: () => void} = {
      1: () => {
        const { productName, targetAudience, keyBenefits } = inputs;
        if (productName?.length > 3) score += 35;
        if (targetAudience?.length > 8) score += 35;
        if (keyBenefits?.length > 20) score += 30;
        feedback = score >= 75 ? 'üéâ –û—Ç–ª–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞! –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.' :
                  score >= 50 ? 'üëç –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π.' :
                  'üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ.';
      },
      2: () => {
        const { subject, brand, offer } = inputs;
        if (subject?.length > 5 && subject?.length < 50) score += 35;
        if (brand?.length > 2) score += 30;
        if (offer?.length > 15) score += 35;
        feedback = score >= 75 ? 'üíå –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è email-—Ä–∞—Å—Å—ã–ª–∫–∞!' :
                  score >= 50 ? 'üìß –ù–µ–ø–ª–æ—Ö–æ! –£–ª—É—á—à–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.' :
                  '‚úâÔ∏è –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤—Å–µ –ø–æ–ª—è.';
      },
      3: () => {
        const { niche, platform, audience } = inputs;
        if (niche?.length > 5) score += 35;
        if (platform) score += 30;
        if (audience?.length > 8) score += 35;
        feedback = score >= 75 ? 'üöÄ –û—Ç–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞!' :
                  score >= 50 ? 'üí° –•–æ—Ä–æ—à–æ! –£—Ç–æ—á–Ω–∏—Ç–µ –∞—É–¥–∏—Ç–æ—Ä–∏—é.' :
                  'üéØ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.';
      },
      4: () => {
        const { topic, duration, message } = inputs;
        if (topic?.length > 5) score += 35;
        if (duration) score += 30;
        if (message?.length > 10) score += 35;
        feedback = score >= 75 ? 'üé¨ –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –≤–∏–¥–µ–æ!' :
                  score >= 50 ? 'üìπ –•–æ—Ä–æ—à–æ! –£—Ç–æ—á–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.' :
                  'üé• –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é.';
      },
      5: () => {
        const { title, keywords, mainPoints } = inputs;
        if (title?.length > 10) score += 35;
        if (keywords?.split(',').length >= 3) score += 30;
        if (mainPoints?.length > 30) score += 35;
        feedback = score >= 75 ? 'üì∞ –û—Ç–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç—å—è –ø–æ–ª—É—á–∏—Ç—Å—è!' :
                  score >= 50 ? '‚úçÔ∏è –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.' :
                  'üìù –ü—Ä–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–∞—Ç—å–∏.';
      },
      6: () => {
        const { theme, targetGroup, idea } = inputs;
        if (theme?.length > 5) score += 35;
        if (targetGroup?.length > 5) score += 30;
        if (idea?.length > 10) score += 35;
        feedback = score >= 75 ? 'üòÑ –û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è –¥–ª—è –º–µ–º–∞!' :
                  score >= 50 ? 'üé≠ –ù–µ–ø–ª–æ—Ö–æ! –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–¥–µ—é.' :
                  'ü§î –ù—É–∂–Ω–∞ –±–æ–ª–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è.';
      },
      7: () => {
        const { industry, competitors, analysisType } = inputs;
        if (industry?.length > 5) score += 35;
        if (competitors?.split(',').length >= 2) score += 30;
        if (analysisType) score += 35;
        feedback = score >= 75 ? 'üîç –û—Ç–ª–∏—á–Ω—ã–π –ø–ª–∞–Ω –∞–Ω–∞–ª–∏–∑–∞!' :
                  score >= 50 ? 'üìä –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.' :
                  'üìà –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞.';
      },
      8: () => {
        const { businessType, functions, botTone } = inputs;
        if (businessType?.length > 5) score += 35;
        if (functions?.length > 20) score += 30;
        if (botTone) score += 35;
        feedback = score >= 75 ? 'ü§ñ –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –±–æ—Ç–∞!' :
                  score >= 50 ? 'üí¨ –•–æ—Ä–æ—à–æ! –û–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.' :
                  'üõ†Ô∏è –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ.';
      },
      9: () => {
        const { service, location, commonQuestions } = inputs;
        if (service?.length > 5) score += 35;
        if (location?.length > 3) score += 30;
        if (commonQuestions?.length > 20) score += 35;
        feedback = score >= 75 ? 'üéôÔ∏è –û—Ç–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞!' :
                  score >= 50 ? 'üîä –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤.' :
                  'üìç –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.';
      },
      10: () => {
        const { quizTopic, quizGoal, quizNiche } = inputs;
        if (quizTopic?.length > 8) score += 35;
        if (quizGoal) score += 30;
        if (quizNiche?.length > 5) score += 35;
        feedback = score >= 75 ? 'üéØ –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –∫–≤–∏–∑–∞!' :
                  score >= 50 ? 'üìã –•–æ—Ä–æ—à–æ! –£—Ç–æ—á–Ω–∏—Ç–µ —Ü–µ–ª—å.' :
                  '‚ùì –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–¥–µ—é –∫–≤–∏–∑–∞.';
      },
      11: () => {
        const { contentTopic, contentType, emotion } = inputs;
        if (contentTopic?.length > 5) score += 35;
        if (contentType) score += 30;
        if (emotion) score += 35;
        feedback = score >= 75 ? '‚ú® –û—Ç–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤!' :
                  score >= 50 ? 'üìù –•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ—Ü–∏—é.' :
                  'üí≠ –£—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞.';
      },
      12: () => {
        const { infographicTopic, keyData, infographicAudience } = inputs;
        if (infographicTopic?.length > 8) score += 35;
        if (keyData?.length > 30) score += 30;
        if (infographicAudience?.length > 8) score += 35;
        feedback = score >= 75 ? 'üìä –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏!' :
                  score >= 50 ? 'üìà –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.' :
                  'üìâ –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö.';
      },
      13: () => {
        const { caseIndustry, problem, result } = inputs;
        if (caseIndustry?.length > 5) score += 35;
        if (problem?.length > 10) score += 30;
        if (result?.length > 10) score += 35;
        feedback = score >= 75 ? 'üèÜ –û—Ç–ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞!' :
                  score >= 50 ? 'üìñ –•–æ—Ä–æ—à–æ! –£—Ç–æ—á–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.' :
                  'üìö –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–µ–π—Å.';
      },
      14: () => {
        const { podcastName, episodeTopic, podcastFormat } = inputs;
        if (podcastName?.length > 5) score += 35;
        if (episodeTopic?.length > 8) score += 30;
        if (podcastFormat) score += 35;
        feedback = score >= 75 ? 'üéôÔ∏è –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –ø–æ–¥–∫–∞—Å—Ç–∞!' :
                  score >= 50 ? 'üéß –•–æ—Ä–æ—à–æ! –£—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É –≤—ã–ø—É—Å–∫–∞.' :
                  'üìª –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é.';
      },
      15: () => {
        const { businessNiche, platforms, frequency } = inputs;
        if (businessNiche?.length > 5) score += 35;
        if (platforms?.split(',').length >= 2) score += 30;
        if (frequency) score += 35;
        feedback = score >= 75 ? '‚öôÔ∏è –û—Ç–ª–∏—á–Ω—ã–π –ø–ª–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏!' :
                  score >= 50 ? 'üîÑ –•–æ—Ä–æ—à–æ! –î–æ–±–∞–≤—å—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.' :
                  'üìÖ –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–π.';
      }
    };
    
    const evaluateFunction = evaluationRules[taskId];
    if (evaluateFunction) {
      evaluateFunction();
    } else {
      score = 50;
      feedback = '–û—Ü–µ–Ω–∫–∞ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.';
    }
    
    setTaskFeedback(prev => ({ ...prev, [taskId]: { score, feedback } }));
    
    if (score >= 75) {
      setTimeout(() => toggleTaskComplete(taskId), 1000);
    }
  };

  const getTaskForm = (taskId: number) => {
    const inputs = taskInputs[taskId] || {};
    
    const taskForms: {[key: number]: JSX.Element} = {
      1: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: iPhone 15 Pro" className="w-full p-2 border rounded-md text-sm" value={inputs.productName || ''} onChange={(e) => updateTaskInput(taskId, 'productName', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ–ª–æ–¥—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã 25-35 –ª–µ—Ç" className="w-full p-2 border rounded-md text-sm" value={inputs.targetAudience || ''} onChange={(e) => updateTaskInput(taskId, 'targetAudience', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞*</label>
            <Textarea placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢–∏—Ç–∞–Ω–æ–≤—ã–π –∫–æ—Ä–ø—É—Å, –ö–∞–º–µ—Ä–∞ Pro –∫–ª–∞—Å—Å–∞..." className="w-full text-sm min-h-[60px]" value={inputs.keyBenefits || ''} onChange={(e) => updateTaskInput(taskId, 'keyBenefits', e.target.value)} />
          </div>
        </div>
      ),
      2: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ email-—Ä–∞—Å—Å—ã–ª–∫—É:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –ø–∏—Å—å–º–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–Ω–Ω–∞, –≤–∞—à–∞ —Å–∫–∏–¥–∫–∞ –∂–¥—ë—Ç!" className="w-full p-2 border rounded-md text-sm" value={inputs.subject || ''} onChange={(e) => updateTaskInput(taskId, 'subject', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–í–∞—à –±—Ä–µ–Ω–¥/–∫–æ–º–ø–∞–Ω–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: TechStore" className="w-full p-2 border rounded-md text-sm" value={inputs.brand || ''} onChange={(e) => updateTaskInput(taskId, 'brand', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ*</label>
            <Textarea placeholder="–ß—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç—É..." className="w-full text-sm min-h-[60px]" value={inputs.offer || ''} onChange={(e) => updateTaskInput(taskId, 'offer', e.target.value)} />
          </div>
        </div>
      ),
      3: (
        <div className="space-y-3">
          <h4 className="font-semibold">–ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∏–¥–µ–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–í–∞—à–∞ –Ω–∏—à–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –§–∏—Ç–Ω–µ—Å –∏ –∑–¥–æ—Ä–æ–≤—å–µ" className="w-full p-2 border rounded-md text-sm" value={inputs.niche || ''} onChange={(e) => updateTaskInput(taskId, 'niche', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.platform || ''} onChange={(e) => updateTaskInput(taskId, 'platform', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É</option>
              <option value="instagram">Instagram</option>
              <option value="tiktok">TikTok</option>
              <option value="youtube">YouTube</option>
              <option value="telegram">Telegram</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ñ–µ–Ω—â–∏–Ω—ã 25-40 –ª–µ—Ç" className="w-full p-2 border rounded-md text-sm" value={inputs.audience || ''} onChange={(e) => updateTaskInput(taskId, 'audience', e.target.value)} />
          </div>
        </div>
      ),
      4: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –≤–∏–¥–µ–æ:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –≤–∏–¥–µ–æ*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 5 —Å–µ–∫—Ä–µ—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏" className="w-full p-2 border rounded-md text-sm" value={inputs.topic || ''} onChange={(e) => updateTaskInput(taskId, 'topic', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.duration || ''} onChange={(e) => updateTaskInput(taskId, 'duration', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</option>
              <option value="15-30 —Å–µ–∫">15-30 —Å–µ–∫—É–Ω–¥ (TikTok/Reels)</option>
              <option value="1-3 –º–∏–Ω">1-3 –º–∏–Ω—É—Ç—ã (YouTube Shorts)</option>
              <option value="5-10 –º–∏–Ω">5-10 –º–∏–Ω—É—Ç (YouTube)</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ö–ª—é—á–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ*</label>
            <input type="text" placeholder="–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–Ω–µ—Å—Ç–∏ –¥–æ –∑—Ä–∏—Ç–µ–ª–µ–π?" className="w-full p-2 border rounded-md text-sm" value={inputs.message || ''} onChange={(e) => updateTaskInput(taskId, 'message', e.target.value)} />
          </div>
        </div>
      ),
      5: (
        <div className="space-y-3">
          <h4 className="font-semibold">–ù–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ç—å—é –¥–ª—è –±–ª–æ–≥–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 7 —Å–ø–æ—Å–æ–±–æ–≤ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –≤ 2024" className="w-full p-2 border rounded-md text-sm" value={inputs.title || ''} onChange={(e) => updateTaskInput(taskId, 'title', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è SEO*</label>
            <input type="text" placeholder="–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: –ø—Ä–æ–¥–∞–∂–∏, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –±–∏–∑–Ω–µ—Å" className="w-full p-2 border rounded-md text-sm" value={inputs.keywords || ''} onChange={(e) => updateTaskInput(taskId, 'keywords', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∑–∏—Å—ã*</label>
            <Textarea placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –∏–¥–µ–∏ —Å—Ç–∞—Ç—å–∏..." className="w-full text-sm min-h-[60px]" value={inputs.mainPoints || ''} onChange={(e) => updateTaskInput(taskId, 'mainPoints', e.target.value)} />
          </div>
        </div>
      ),
      6: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –º–µ–º/–≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –º–µ–º–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ vs –æ—Ñ–∏—Å" className="w-full p-2 border rounded-md text-sm" value={inputs.theme || ''} onChange={(e) => updateTaskInput(taskId, 'theme', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã" className="w-full p-2 border rounded-md text-sm" value={inputs.targetGroup || ''} onChange={(e) => updateTaskInput(taskId, 'targetGroup', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è/—à—É—Ç–∫–∞*</label>
            <input type="text" placeholder="–í —á–µ–º —Å—É—Ç—å –º–µ–º–∞?" className="w-full p-2 border rounded-md text-sm" value={inputs.idea || ''} onChange={(e) => updateTaskInput(taskId, 'idea', e.target.value)} />
          </div>
        </div>
      ),
      7: (
        <div className="space-y-3">
          <h4 className="font-semibold">–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–í–∞—à–∞ –Ω–∏—à–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ" className="w-full p-2 border rounded-md text-sm" value={inputs.industry || ''} onChange={(e) => updateTaskInput(taskId, 'industry', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ì–ª–∞–≤–Ω—ã–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã*</label>
            <input type="text" placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é" className="w-full p-2 border rounded-md text-sm" value={inputs.competitors || ''} onChange={(e) => updateTaskInput(taskId, 'competitors', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.analysisType || ''} onChange={(e) => updateTaskInput(taskId, 'analysisType', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞</option>
              <option value="content">–ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è</option>
              <option value="pricing">–¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
              <option value="social">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</option>
              <option value="seo">SEO-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è</option>
            </select>
          </div>
        </div>
      ),
      8: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ —á–∞—Ç-–±–æ—Ç–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–°—Ñ–µ—Ä–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–¥—ã" className="w-full p-2 border rounded-md text-sm" value={inputs.businessType || ''} onChange={(e) => updateTaskInput(taskId, 'businessType', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞*</label>
            <Textarea placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –ø—Ä–∏–µ–º –∑–∞–∫–∞–∑–æ–≤, FAQ..." className="w-full text-sm min-h-[60px]" value={inputs.functions || ''} onChange={(e) => updateTaskInput(taskId, 'functions', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–æ–Ω –æ–±—â–µ–Ω–∏—è*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.botTone || ''} onChange={(e) => updateTaskInput(taskId, 'botTone', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–Ω</option>
              <option value="friendly">–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π</option>
              <option value="professional">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π</option>
              <option value="casual">–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π</option>
            </select>
          </div>
        </div>
      ),
      9: (
        <div className="space-y-3">
          <h4 className="font-semibold">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞/—Ç–æ–≤–∞—Ä*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –î–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã" className="w-full p-2 border rounded-md text-sm" value={inputs.service || ''} onChange={(e) => updateTaskInput(taskId, 'service', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª–µ–≤–æ–π —Ä–µ–≥–∏–æ–Ω*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞" className="w-full p-2 border rounded-md text-sm" value={inputs.location || ''} onChange={(e) => updateTaskInput(taskId, 'location', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤*</label>
            <Textarea placeholder="–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞—é—Ç –≤–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã?" className="w-full text-sm min-h-[60px]" value={inputs.commonQuestions || ''} onChange={(e) => updateTaskInput(taskId, 'commonQuestions', e.target.value)} />
          </div>
        </div>
      ),
      10: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –∫–≤–∏–∑/–æ–ø—Ä–æ—Å:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –∫–≤–∏–∑–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–∫–æ–π —Ç–∏–ø –ø–∏—Ç–∞–Ω–∏—è –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç?" className="w-full p-2 border rounded-md text-sm" value={inputs.quizTopic || ''} onChange={(e) => updateTaskInput(taskId, 'quizTopic', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª—å –∫–≤–∏–∑–∞*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.quizGoal || ''} onChange={(e) => updateTaskInput(taskId, 'quizGoal', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å</option>
              <option value="lead-generation">–°–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</option>
              <option value="engagement">–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏</option>
              <option value="education">–û–±—É—á–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏</option>
              <option value="product-recommendation">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–í–∞—à–∞ –Ω–∏—à–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ" className="w-full p-2 border rounded-md text-sm" value={inputs.quizNiche || ''} onChange={(e) => updateTaskInput(taskId, 'quizNiche', e.target.value)} />
          </div>
        </div>
      ),
      11: (
        <div className="space-y-3">
          <h4 className="font-semibold">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö" className="w-full p-2 border rounded-md text-sm" value={inputs.contentTopic || ''} onChange={(e) => updateTaskInput(taskId, 'contentTopic', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.contentType || ''} onChange={(e) => updateTaskInput(taskId, 'contentType', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
              <option value="article">–°—Ç–∞—Ç—å—è</option>
              <option value="video">–í–∏–¥–µ–æ</option>
              <option value="social-post">–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</option>
              <option value="email">Email-—Ä–∞—Å—Å—ã–ª–∫–∞</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ñ–µ–ª–∞–µ–º–∞—è —ç–º–æ—Ü–∏—è*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.emotion || ''} onChange={(e) => updateTaskInput(taskId, 'emotion', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ—Ü–∏—é</option>
              <option value="curiosity">–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ</option>
              <option value="urgency">–°—Ä–æ—á–Ω–æ—Å—Ç—å</option>
              <option value="benefit">–í—ã–≥–æ–¥–∞</option>
              <option value="surprise">–£–¥–∏–≤–ª–µ–Ω–∏–µ</option>
            </select>
          </div>
        </div>
      ),
      12: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫—É:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ e-commerce 2024" className="w-full p-2 border rounded-md text-sm" value={inputs.infographicTopic || ''} onChange={(e) => updateTaskInput(taskId, 'infographicTopic', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ö–ª—é—á–µ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ*</label>
            <Textarea placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —Ü–∏—Ñ—Ä—ã, —Ñ–∞–∫—Ç—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É..." className="w-full text-sm min-h-[60px]" value={inputs.keyData || ''} onChange={(e) => updateTaskInput(taskId, 'keyData', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–ª–∞–¥–µ–ª—å—Ü—ã –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤" className="w-full p-2 border rounded-md text-sm" value={inputs.infographicAudience || ''} onChange={(e) => updateTaskInput(taskId, 'infographicAudience', e.target.value)} />
          </div>
        </div>
      ),
      13: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –∫–µ–π—Å/–∏—Å—Ç–æ—Ä–∏—é —É—Å–ø–µ—Ö–∞:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ" className="w-full p-2 border rounded-md text-sm" value={inputs.caseIndustry || ''} onChange={(e) => updateTaskInput(taskId, 'caseIndustry', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ü—Ä–æ–±–ª–µ–º–∞ –∫–ª–∏–µ–Ω—Ç–∞*</label>
            <input type="text" placeholder="–° –∫–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π –æ–±—Ä–∞—Ç–∏–ª—Å—è –∫–ª–∏–µ–Ω—Ç?" className="w-full p-2 border rounded-md text-sm" value={inputs.problem || ''} onChange={(e) => updateTaskInput(taskId, 'problem', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–î–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –Ω–∞ 300%" className="w-full p-2 border rounded-md text-sm" value={inputs.result || ''} onChange={(e) => updateTaskInput(taskId, 'result', e.target.value)} />
          </div>
        </div>
      ),
      14: (
        <div className="space-y-3">
          <h4 className="font-semibold">–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–¥–∫–∞—Å—Ç:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∫–∞—Å—Ç–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞" className="w-full p-2 border rounded-md text-sm" value={inputs.podcastName || ''} onChange={(e) => updateTaskInput(taskId, 'podcastName', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–º–∞ –≤—ã–ø—É—Å–∫–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—Ç–∞–ø" className="w-full p-2 border rounded-md text-sm" value={inputs.episodeTopic || ''} onChange={(e) => updateTaskInput(taskId, 'episodeTopic', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–§–æ—Ä–º–∞—Ç*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.podcastFormat || ''} onChange={(e) => updateTaskInput(taskId, 'podcastFormat', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç</option>
              <option value="solo">–°–æ–ª—å–Ω—ã–π –≤—ã–ø—É—Å–∫</option>
              <option value="interview">–ò–Ω—Ç–µ—Ä–≤—å—é —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º</option>
              <option value="panel">–ü–∞–Ω–µ–ª—å–Ω–∞—è –¥–∏—Å–∫—É—Å—Å–∏—è</option>
            </select>
          </div>
        </div>
      ),
      15: (
        <div className="space-y-3">
          <h4 className="font-semibold">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</h4>
          <div>
            <label className="block text-sm font-medium mb-1">–í–∞—à–∞ –Ω–∏—à–∞*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –§–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä" className="w-full p-2 border rounded-md text-sm" value={inputs.businessNiche || ''} onChange={(e) => updateTaskInput(taskId, 'businessNiche', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–û—Å–Ω–æ–≤–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã*</label>
            <input type="text" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Instagram, Facebook, Telegram" className="w-full p-2 border rounded-md text-sm" value={inputs.platforms || ''} onChange={(e) => updateTaskInput(taskId, 'platforms', e.target.value)} />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1">–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π*</label>
            <select className="w-full p-2 border rounded-md text-sm" value={inputs.frequency || ''} onChange={(e) => updateTaskInput(taskId, 'frequency', e.target.value)}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É</option>
              <option value="daily">–ö–∞–∂–¥—ã–π –¥–µ–Ω—å</option>
              <option value="3-times-week">3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é</option>
              <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
              <option value="bi-weekly">–†–∞–∑ –≤ –¥–≤–µ –Ω–µ–¥–µ–ª–∏</option>
            </select>
          </div>
        </div>
      )
    };
    
    return taskForms[taskId] || <div>–§–æ—Ä–º–∞ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</div>;
  };

  const difficultyColors = {
    "–õ–µ–≥–∫–æ": "bg-green-100 text-green-800",
    "–°—Ä–µ–¥–Ω–µ": "bg-yellow-100 text-yellow-800", 
    "–°–ª–æ–∂–Ω–æ": "bg-red-100 text-red-800"
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <Icon name="Brain" size={32} className="text-primary" />
              <div>
                <h1 className="text-2xl font-bold text-gray-900">AI Content Guide</h1>
                <p className="text-sm text-gray-600">15 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á —Å –ò–ò</p>
              </div>
            </div>
            <div className="flex items-center gap-4">
              <div className="text-right">
                <p className="text-sm text-gray-600">–ü—Ä–æ–≥—Ä–µ—Å—Å</p>
                <div className="flex items-center gap-2">
                  <Progress value={progressPercent} className="w-24" />
                  <span className="text-sm font-medium">{progressPercent}%</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        <Tabs defaultValue="tasks" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8">
            <TabsTrigger value="tasks" className="flex items-center gap-2">
              <Icon name="CheckSquare" size={16} />
              –ó–∞–¥–∞—á–∏
            </TabsTrigger>
            <TabsTrigger value="exercises" className="flex items-center gap-2">
              <Icon name="Target" size={16} />
              –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
            </TabsTrigger>
            <TabsTrigger value="examples" className="flex items-center gap-2">
              <Icon name="Lightbulb" size={16} />
              –ü—Ä–∏–º–µ—Ä—ã
            </TabsTrigger>
          </TabsList>

          <TabsContent value="tasks">
            <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
              {tasks.map((task) => (
                <Card 
                  key={task.id} 
                  className={`transition-all duration-300 hover:shadow-lg cursor-pointer ${
                    completedTasks.includes(task.id) ? 'ring-2 ring-green-500 bg-green-50' : 'hover:scale-105'
                  } ${activeTask === task.id ? 'ring-2 ring-primary' : ''}`}
                  onClick={() => setActiveTask(activeTask === task.id ? null : task.id)}
                >
                  <CardHeader className="pb-3">
                    <div className="flex items-start justify-between">
                      <div className="flex items-center gap-2">
                        <Checkbox 
                          checked={completedTasks.includes(task.id)}
                          onCheckedChange={() => toggleTaskComplete(task.id)}
                          onClick={(e) => e.stopPropagation()}
                        />
                        <CardTitle className="text-lg">{task.title}</CardTitle>
                      </div>
                      <Badge className={difficultyColors[task.difficulty as keyof typeof difficultyColors]}>
                        {task.difficulty}
                      </Badge>
                    </div>
                    <p className="text-sm text-gray-600 mt-2">{task.description}</p>
                  </CardHeader>
                  
                  <CardContent>
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center gap-2 text-sm text-gray-500">
                        <Icon name="Clock" size={14} />
                        {task.time}
                      </div>
                      <div className="flex gap-1">
                        {task.tools.map((tool) => (
                          <Badge key={tool} variant="outline" className="text-xs">
                            {tool}
                          </Badge>
                        ))}
                      </div>
                    </div>

                    {activeTask === task.id && (
                      <div className="mt-4 p-3 bg-gray-50 rounded-md animate-accordion-down">
                        {!taskFeedback[task.id] ? (
                          <div className="space-y-4">
                            <div className="text-xs text-gray-600 mb-3">
                              üí° <strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</strong> {task.example}
                            </div>
                            
                            {getTaskForm(task.id)}
                            
                            <Button 
                              size="sm" 
                              className="w-full mt-4"
                              onClick={(e) => {
                                e.stopPropagation();
                                evaluateTask(task.id);
                              }}
                            >
                              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É
                            </Button>
                          </div>
                        ) : (
                          <div className="space-y-3">
                            <div className="flex items-center justify-between">
                              <p className="text-sm font-medium">–û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã:</p>
                              <div className="flex items-center gap-2">
                                <Badge 
                                  className={
                                    taskFeedback[task.id].score >= 75 ? 'bg-green-100 text-green-800' :
                                    taskFeedback[task.id].score >= 50 ? 'bg-yellow-100 text-yellow-800' :
                                    'bg-red-100 text-red-800'
                                  }
                                >
                                  {taskFeedback[task.id].score}/100
                                </Badge>
                              </div>
                            </div>
                            
                            <div className="bg-white p-3 rounded border text-sm">
                              {taskFeedback[task.id].feedback}
                            </div>
                            
                            {taskFeedback[task.id].score >= 75 && (
                              <div className="bg-green-50 border border-green-200 p-3 rounded-md">
                                <div className="flex items-center gap-2">
                                  <Icon name="Trophy" size={16} className="text-green-600" />
                                  <span className="text-sm font-medium text-green-800">
                                    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!
                                  </span>
                                </div>
                              </div>
                            )}
                            
                            <div className="flex gap-2">
                              <Button 
                                size="sm" 
                                variant="outline"
                                onClick={(e) => {
                                  e.stopPropagation();
                                  setTaskFeedback(prev => {
                                    const newFeedback = { ...prev };
                                    delete newFeedback[task.id];
                                    return newFeedback;
                                  });
                                }}
                              >
                                <Icon name="RefreshCw" size={12} className="mr-1" />
                                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                              </Button>
                              {taskFeedback[task.id].score >= 75 && (
                                <Button 
                                  size="sm" 
                                  variant="outline"
                                  onClick={(e) => {
                                    e.stopPropagation();
                                    const result = Object.values(taskInputs[task.id] || {}).join('\n\n');
                                    navigator.clipboard.writeText(result);
                                  }}
                                >
                                  <Icon name="Copy" size={12} className="mr-1" />
                                  –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                                </Button>
                              )}
                            </div>
                          </div>
                        )}
                      </div>
                    )}
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="exercises">
            <div className="grid gap-6 md:grid-cols-2">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="PenTool" size={20} />
                    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="mb-4">–°–æ–∑–¥–∞–π—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:</p>
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium mb-2">–¢–æ–≤–∞—Ä:</label>
                      <input 
                        type="text" 
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏"
                        className="w-full p-2 border rounded-md"
                        value={product}
                        onChange={(e) => setProduct(e.target.value)}
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium mb-2">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:</label>
                      <input 
                        type="text" 
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã 25-40 –ª–µ—Ç"
                        className="w-full p-2 border rounded-md"
                        value={audience}
                        onChange={(e) => setAudience(e.target.value)}
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium mb-2">–¢–æ–Ω:</label>
                      <select 
                        className="w-full p-2 border rounded-md"
                        value={tone}
                        onChange={(e) => setTone(e.target.value)}
                      >
                        <option>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π</option>
                        <option>–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π</option>
                        <option>–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π</option>
                        <option>–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π</option>
                      </select>
                    </div>
                    <Button className="w-full" onClick={generatePrompt}>
                      –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç
                    </Button>
                    
                    {generatedPrompt && (
                      <div className="mt-6">
                        <label className="block text-sm font-medium mb-2">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç:</label>
                        <Textarea 
                          value={generatedPrompt}
                          readOnly
                          className="min-h-[200px] bg-gray-50"
                          placeholder="–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç..."
                        />
                        <div className="flex gap-2 mt-2">
                          <Button 
                            size="sm" 
                            variant="outline"
                            onClick={() => navigator.clipboard.writeText(generatedPrompt)}
                          >
                            <Icon name="Copy" size={14} className="mr-1" />
                            –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                          </Button>
                          <Button 
                            size="sm" 
                            variant="outline"
                            onClick={() => setGeneratedPrompt('')}
                          >
                            <Icon name="Trash2" size={14} className="mr-1" />
                            –û—á–∏—Å—Ç–∏—Ç—å
                          </Button>
                        </div>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="BarChart3" size={20} />
                    –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="mb-4">–°—Ä–∞–≤–Ω–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤:</p>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span>–û–±—ã—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</span>
                      <div className="flex items-center gap-2">
                        <Progress value={40} className="w-16" />
                        <span className="text-sm">40%</span>
                      </div>
                    </div>
                    <div className="flex justify-between items-center">
                      <span>–ò–ò + –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç</span>
                      <div className="flex items-center gap-2">
                        <Progress value={70} className="w-16" />
                        <span className="text-sm">70%</span>
                      </div>
                    </div>
                    <div className="flex justify-between items-center">
                      <span>–ò–ò + –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç</span>
                      <div className="flex items-center gap-2">
                        <Progress value={95} className="w-16" />
                        <span className="text-sm">95%</span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="examples">
            <div className="grid gap-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="Trophy" size={20} />
                    –ì–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ —à–∞–±–ª–æ–Ω—ã
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid gap-4 md:grid-cols-2">
                    <div className="p-4 border rounded-lg">
                      <h4 className="font-semibold mb-2">Email-—Ä–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è e-commerce</h4>
                      <p className="text-sm text-gray-600 mb-2">–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º–æ—Å—Ç–∏ –Ω–∞ 45%</p>
                      <div className="bg-gray-50 p-3 rounded text-sm">
                        <strong>–¢–µ–º–∞:</strong> [–ò–º—è], –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —Å–∫—É—á–∞–µ—Ç! üõí<br/>
                        <strong>–ü—Ä–µ–≤—å—é:</strong> –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Å–≤–æ–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã...
                      </div>
                    </div>
                    <div className="p-4 border rounded-lg">
                      <h4 className="font-semibold mb-2">–ü–æ—Å—Ç –¥–ª—è Instagram</h4>
                      <p className="text-sm text-gray-600 mb-2">–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç: 15,000 –ø–æ–∫–∞–∑–æ–≤</p>
                      <div className="bg-gray-50 p-3 rounded text-sm">
                        <strong>–¢–µ–∫—Å—Ç:</strong> –ó–∞ —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π —Å—Ç–æ—è—Ç 3 –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç—ã...<br/>
                        <strong>–•–µ—à—Ç–µ–≥–∏:</strong> #–±–∏–∑–Ω–µ—Å #—Å—Ç–∞—Ä—Ç–∞–ø #–º–æ—Ç–∏–≤–∞—Ü–∏—è
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Index;